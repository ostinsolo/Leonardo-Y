# Leonardo AI Assistant - .gitignore

# ========================================
# MODELS & CACHES (LARGE FILES)
# ========================================

# Model cache directories
leonardo_model_cache/
leonardo_model_offload/
leonardo_fastmcp_memory/
leonardo_memory/
leonardo_verification_cache/

# HuggingFace cache
.cache/
**/models--*/
**/snapshots/

# Sentence transformers cache  
.sentence_transformers/

# ChromaDB data
chroma.sqlite3*
*.db
*.sqlite*
**/chroma_db/
**/data_level0.bin
**/chroma.sqlite3

# Milvus data
milvus_lite/
*.milvus

# Test data directories
test_data_fastmcp/
leonardo_enhanced_memory/
test_mcp_sqlite/
test_mcp_simple/
test_enhanced_fallback/
leonardo_memory/

# Screenshots and images (unless specifically needed)
*.png
*.jpg
*.jpeg
debug_*

# ========================================
# TEST RESULTS & REPORTS 
# ========================================

# Test result files
leonardo_full_production_report_*.json
create_conversation_review.py
# Note: Keep conversation_review_*.md files - they're valuable for manual review

# Log files
*.log
data/logs/
app.log

# Audit logs
audit_logs/
*.log

# ========================================
# PYTHON
# ========================================

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Virtual environments
leonardo-py310/
venv/
ENV/
env/
.venv/

# PyInstaller
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# ========================================
# MACOS
# ========================================
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# ========================================
# EDITORS & IDEs
# ========================================

# VSCode
.vscode/
*.code-workspace

# PyCharm
.idea/

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*~
*.swp
*.swo

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# ========================================
# MISC
# ========================================

# Temporary files
*.tmp
*.temp
temp/
tmp/

# Backup files
*.bak
*.backup

# Archive files (unless specifically needed)
*.zip
*.tar
*.tar.gz
*.tgz
*.rar
*.7z

# Large data files
*.bin
*.pt
*.pth
*.safetensors
*.h5
*.hdf5
*.pkl
*.pickle

# API keys and secrets
.env
.env.local
.env.prod
secrets.json
config/secrets.py

# OS generated files
Thumbs.db
ehthumbs.db
